datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id               Int         @id @default(autoincrement())
  nome             String
  login            String      @unique
  senha            String      @db.VarChar(255)
  senha_salt       String?      @db.VarChar(255)
  resetToken       String?      @default("") @db.VarChar(255)
  resetTokenExpiry DateTime?    @default(now())
  tipo             UsuarioTipo 

  aluno     Aluno?
  professor Professor?
  empresa   Empresa?
}

model Aluno {
  id            Int    @id @default(autoincrement())
  email         String @unique
  cpf           String @unique
  rg            String @unique
  endereco      String
  saldo         Int

  instituicaoId Int
  usuarioId     Int    @unique

  usuario     Usuario     @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  instituicao Instituicao @relation(fields: [instituicaoId], references: [id], onDelete: Cascade)

  vantagens  Vantagem[]
  transacoes Transacao[]
  cursos     Curso_Aluno[]
}

model Professor {
  id            Int    @id @default(autoincrement())
  cpf           String @unique
  saldo         Int

  instituicaoId Int
  usuarioId     Int    @unique

  usuario     Usuario     @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  instituicao Instituicao @relation(fields: [instituicaoId], references: [id], onDelete: Cascade)

  transacoes Transacao[]
}

model Empresa {
  id        Int    @id @default(autoincrement())
  email     String @unique

  usuarioId Int    @unique

  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  vantagens  Vantagem[]
  transacoes Transacao[]
}

model Vantagem {
  id        Int    @id @default(autoincrement())
  descricao String
  foto      String
  preco     Int
  empresaId Int

  empresa Empresa @relation(fields: [empresaId], references: [id])
  alunos   Aluno[]
}

model Transacao {
  id        Int           @id @default(autoincrement())
  numMoedas Int
  tipo      TipoTransacao
  data      DateTime      @default(now())
  cupom     String?       @unique
  motivo    String?

  alunoId     Int?
  empresaId   Int?
  professorId Int?

  aluno     Aluno?     @relation(fields: [alunoId], references: [id], onDelete: SetNull)
  empresa   Empresa?   @relation(fields: [empresaId], references: [id], onDelete: SetNull)
  professor Professor? @relation(fields: [professorId], references: [id], onDelete: SetNull)
}

model Instituicao {
    id             Int          @id @default(autoincrement())
    nome           String

  alunos      Aluno[]
  professores Professor[]
}

enum TipoTransacao {
  TROCA
  ENVIO
  RECARGA
}

enum UsuarioTipo {
  ALUNO
  PROFESSOR
  EMPRESA
}

model Curso {
  id           Int     @id @default(autoincrement())
  nome         String
  descricao    String?
  icon         String?
  duracao      Int?
  creditos     Int?
  cargaHoraria Int?    @map("carga_horaria")

  cursoAluno Curso_Aluno[]
}

model Curso_Aluno {
  curso   Curso @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  cursoId Int
  aluno   Aluno @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  alunoId Int
  periodo Int

  @@id([cursoId, alunoId])
  @@index([cursoId, alunoId])
}
